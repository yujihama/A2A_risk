file_path: samples/python/agents/purchasing_data/query_agent.py
description: purchasing_data エージェントを汎用化し、データソースやスキーマの変更に対応できるようにする。

modifications:
  - target: class QueryAgent
    changes:
      - type: modify_method
        method: __init__
        description: データ読み込み処理を削除し、モデルと空のDataFrame、空のスキーマ情報のみ初期化する。
        details:
          - csv_path 引数を削除。
          - self.df を空の pd.DataFrame() で初期化。
          - self.column_info を空の dict {} で初期化。
          - データ読み込みと前処理の try-except ブロックを削除。

      - type: add_method
        method: load_data(self, data_source: Any)
        description: 外部からデータソース（ファイルパス or DataFrame）を受け取り、データをロード、前処理、スキーマ生成を行う。
        details:
          - data_source の型を確認し、ファイルパスなら pd.read_csv (または拡張子に応じた関数) で読み込み、DataFrame ならコピーする。
          - 読み込み後、DataFrame が空でないことを確認。
          - _preprocess_data() を呼び出してデータ型などを前処理。
          - _generate_column_info() を呼び出して self.column_info を設定。
          - エラーハンドリングを追加。

      - type: add_method
        method: _preprocess_data(self)
        description: DataFrame のデータ型を推定し、数値列のクリーンアップなどを試みる汎用的な前処理メソッド。
        details:
          - object 型のカラムに対し、通貨記号やカンマを除去後、数値への変換を試みる (例: pd.to_numeric(errors='coerce'))。
          - (オプション) 日付型への変換なども追加可能。
          - 処理前後のデータ型情報をログ出力。

      - type: add_method
        method: _generate_column_info(self) -> Dict[str, str]
        description: 現在の DataFrame から列名、データ型、サンプル値を含むスキーマ情報を動的に生成する。
        details:
          - self.df.columns と self.df.dtypes を使用。
          - データ型に応じて "number", "datetime", "string" などの説明を付与。
          - 各列の非 NaN のサンプル値をいくつか抽出し、説明に追加 (例: '(例: 100, 250)')。
          - 結果を dict 形式で返す。

      - type: modify_method
        method: _translate_query_to_operations
        description: LLM へのプロンプトを改善し、動的に生成されたスキーマ情報を使用する。利用可能な操作や条件を更新・明確化する。
        details:
          - ハードコードされた column_info を削除し、self.column_info をプロンプトに埋め込む。
          - 利用可能な操作 (available_operations) や条件 (available_conditions) を見直し、より汎用的で明確な説明を追加 (例: contains の挙動、isna/notna の追加)。
          - プロンプト内の操作系列のルールや必須パラメータ形式を、よりLLMが理解しやすいように詳細化・明確化する (特に filter の value の型指定、group_by の複数列対応など)。
          - LLM へのシステムプロンプトを、JSON配列のみを出力するように指示を明確化。
          - LLM レスポンスからの JSON 抽出ロジックを改善し、堅牢にする (```json ... ``` ブロックと、ブロックがない場合の直接的な JSON 文字列の両方に対応)。
          - JSON パース後の簡単なバリデーションを追加。

      - type: modify_method
        method: _execute_operations
        description: 汎用化された操作定義に対応し、エラーハンドリングを強化する。
        details:
          - filter 操作で、数値変換を伴う比較を行う際に型エラーが発生しないようにする。
          - filter 操作で 'contains', 'isna', 'notna' などの新しい条件に対応する。
          - group_by 操作で複数列のグループ化や複数集計に対応できるように拡張 (必須ではないが、将来的な改善点)。
          - 中間結果 (intermediate_results) の扱いを見直し、集計結果などを格納する際のキーを明確にする。
          - 操作実行中のエラーハンドリングを強化し、特定の操作でエラーが発生しても可能な限り処理を続行できるようにする (try-except を各操作ブロックに追加または修正)。
          - 各ステップでのログ出力を改善し、デバッグしやすくする。

      - type: modify_method
        method: _format_results_as_text
        description: LLM へのプロンプトを改善し、より自然で分かりやすい回答を生成させる。
        details:
          - プロンプトに渡す情報 (元のクエリ、操作、中間結果、最終結果) を整理。
          - 回答生成のガイドライン (ポイント) を明確化 (例: クエリ意図の反映、簡潔な説明、平易な言葉遣い)。
          - 回答例を追加。
          - JSON シリアライズ時の numpy/pandas 型ハンドリング用の default_converter を確認・修正。

      - type: modify_method
        method: process_query
        description: データ未ロード時のチェックを追加し、オプション引数 (product_id) の汎用的な処理を追加する。
        details:
          - メソッド冒頭で self.df.empty をチェックし、データ未ロード時のエラーメッセージを返す。
          - product_id のようなオプション引数を受け取れるようにシグネチャを変更 (Optional[str] = None)。
          - product_id が指定された場合、関連する列名 (例: 'ProductID', '商品ID' など) を self.df.columns から探し、存在すればクエリ文字列に情報を追加する処理を入れる (LLMが文脈を理解するのを助ける)。列が見つからない場合の警告ログも追加。
          - _translate_query_to_operations に渡すクエリを、product_id 情報を付加したもの (effective_query) にする。
          - _format_results_as_text には元のクエリ (query) を渡す。
          - 全体的なエラーハンドリングを try-except で囲む。

  - target: module level (ファイル先頭付近)
    changes:
      - type: modify_import
        description: 必要なライブラリ (numpy) をインポートする。
        details:
          - import numpy as np を追加 (default_converter で使用)。
      - type: remove_variable
        description: DATA_FILE_PATH の定義を削除またはコメントアウト (必須ではなくなったため)。

  - target: agent.py (関連ファイル)
    changes:
      - type: modify_code
        description: QueryAgent の初期化方法とデータロード方法を変更する。
        details:
          - get_agent_instance() 内で QueryAgent() を初期化後、agent.load_data(DATA_FILE_PATH) のようにデータロード処理を呼び出すように変更。(DATA_FILE_PATH は環境変数や設定ファイルから取得するのが望ましい)
          - run_agent() 内で process_query を呼び出す際に product_id を渡すようにする (現状維持または改善)。

  - target: __main__.py (関連ファイル)
    changes:
      - type: modify_code
        description: QueryAgent の初期化とデータロード処理を修正する。
        details:
          - QueryAgent インスタンス作成後、agent.load_data() を適切なデータソース (設定ファイルや引数から取得) で呼び出すように変更。

  - target: test_run_agent.py (関連ファイル)
    changes:
      - type: modify_code
        description: QueryAgent の初期化とデータロード処理を修正する。
        details:
          - QueryAgent インスタンス作成後、CURRENT_DIR と os.path.join を使って data/dummy_data.csv のパスを取得し、agent.load_data(csv_path) を呼び出すように変更。
          - エラーハンドリングを追加し、データロード失敗時に適切なメッセージを表示する。