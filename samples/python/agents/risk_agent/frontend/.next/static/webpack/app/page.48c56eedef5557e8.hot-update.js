"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DashboardPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/center/center.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/spinner/spinner.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @chakra-ui/react */ \"(app-pages-browser)/./node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! reactflow */ \"(app-pages-browser)/./node_modules/@reactflow/core/dist/esm/index.mjs\");\n/* harmony import */ var _components_ExecutionGraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/ExecutionGraph */ \"(app-pages-browser)/./components/ExecutionGraph.tsx\");\n/* harmony import */ var _components_AgentTable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/AgentTable */ \"(app-pages-browser)/./components/AgentTable.tsx\");\n/* harmony import */ var _lib_useAgentState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/useAgentState */ \"(app-pages-browser)/./lib/useAgentState.ts\");\n/* harmony import */ var dagre__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dagre */ \"(app-pages-browser)/../node_modules/dagre/index.js\");\n/* harmony import */ var dagre__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(dagre__WEBPACK_IMPORTED_MODULE_5__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nfunction statusColor(status) {\n    switch(status){\n        case \"supported\":\n            return \"#38A169\";\n        case \"rejected\":\n            return \"#E53E3E\";\n        case \"investigating\":\n            return \"#3182CE\";\n        default:\n            return \"#A0AEC0\";\n    }\n}\nconst getLayoutedElements = function(nodes, edges) {\n    let direction = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"TB\";\n    const dagreGraph = new (dagre__WEBPACK_IMPORTED_MODULE_5___default().graphlib).Graph();\n    dagreGraph.setDefaultEdgeLabel(()=>({}));\n    dagreGraph.setGraph({\n        rankdir: direction,\n        nodesep: 120,\n        ranksep: 90\n    });\n    nodes.forEach((node)=>{\n        var _node_style, _node_style1;\n        var _node_style_width, _node_style_minHeight;\n        dagreGraph.setNode(node.id, {\n            label: node.data.label,\n            width: (_node_style_width = (_node_style = node.style) === null || _node_style === void 0 ? void 0 : _node_style.width) !== null && _node_style_width !== void 0 ? _node_style_width : 180,\n            height: (_node_style_minHeight = (_node_style1 = node.style) === null || _node_style1 === void 0 ? void 0 : _node_style1.minHeight) !== null && _node_style_minHeight !== void 0 ? _node_style_minHeight : 80\n        });\n    });\n    edges.forEach((edge)=>{\n        dagreGraph.setEdge(edge.source, edge.target);\n    });\n    dagre__WEBPACK_IMPORTED_MODULE_5___default().layout(dagreGraph);\n    nodes.forEach((node)=>{\n        var _node_style, _node_style1;\n        const nodeWithPosition = dagreGraph.node(node.id);\n        var _node_style_width, _node_style_minHeight;\n        node.position = {\n            x: nodeWithPosition.x - ((_node_style_width = (_node_style = node.style) === null || _node_style === void 0 ? void 0 : _node_style.width) !== null && _node_style_width !== void 0 ? _node_style_width : 180) / 2,\n            y: nodeWithPosition.y - ((_node_style_minHeight = (_node_style1 = node.style) === null || _node_style1 === void 0 ? void 0 : _node_style1.minHeight) !== null && _node_style_minHeight !== void 0 ? _node_style_minHeight : 80) / 2\n        };\n        node.sourcePosition = reactflow__WEBPACK_IMPORTED_MODULE_6__.Position.Right;\n        node.targetPosition = reactflow__WEBPACK_IMPORTED_MODULE_6__.Position.Left;\n    });\n    return {\n        nodes,\n        edges\n    };\n};\nfunction DashboardPage() {\n    _s();\n    const state = (0,_lib_useAgentState__WEBPACK_IMPORTED_MODULE_4__.useAgentState)();\n    const [layoutedNodes, setLayoutedNodes] = react__WEBPACK_IMPORTED_MODULE_1___default().useState([]);\n    const [layoutedEdges, setLayoutedEdges] = react__WEBPACK_IMPORTED_MODULE_1___default().useState([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!state || !Array.isArray(state.history)) {\n            setLayoutedNodes([]);\n            setLayoutedEdges([]);\n            return;\n        }\n        try {\n            const nodes = [];\n            const edges = [];\n            const nodeMap = new Map();\n            const baseNodeStyle = {\n                borderRadius: 6,\n                padding: \"10px 15px\",\n                fontSize: \"13px\",\n                whiteSpace: \"pre-wrap\",\n                fontWeight: 500\n            };\n            // アクション履歴の前後関係を記録するための変数\n            let lastActionNodeId = null;\n            // 仮説ごとの最後のアクションノードを記録\n            const lastActionNodeByHypothesis = {};\n            // 仮説ごとの最初のアクションノードを記録\n            const firstActionNodeByHypothesis = {};\n            // generate_hypothesis ノードと生成された仮説の対応\n            const generateHypNodes = [];\n            // 主要なアクションとその表示名\n            const actionDisplayNames = {\n                \"eda\": \"EDA\",\n                \"generate_hypothesis\": \"Generate hyp\",\n                \"evaluate_hypothesis\": \"Evaluate\",\n                \"query_data_agent\": \"query_data_agent\",\n                \"decision_maker\": \"Decision\"\n            };\n            // 表示対象のアクションタイプを定義（decisionを除外）\n            const displayedActionTypes = [\n                \"eda\",\n                \"generate_hypothesis\",\n                \"evaluate_hypothesis\",\n                \"query_data_agent\"\n            ];\n            // メインアクション履歴を表示（アクションノード生成）\n            state.history.forEach((entry, index)=>{\n                var _entry_content;\n                if (!entry || !entry.type) return;\n                // 必要なアクションのみ表示\n                let actionName = \"\";\n                let nodeId = \"hist-\".concat(index);\n                let nodeLabel = \"\";\n                let style = {\n                    ...baseNodeStyle\n                };\n                if (entry.type === \"node\" && ((_entry_content = entry.content) === null || _entry_content === void 0 ? void 0 : _entry_content.name)) {\n                    actionName = entry.content.name;\n                    // 表示対象アクションの場合のみノードを生成（decisionは除外）\n                    if (displayedActionTypes.includes(actionName)) {\n                        nodeLabel = actionDisplayNames[actionName] || actionName;\n                        nodeId = \"action-\".concat(actionName, \"-\").concat(index);\n                        // アクションタイプごとに色分け\n                        if (actionName === \"query_data_agent\") {\n                            var _entry_content_parameters, _entry_content1, _entry_content2;\n                            style.background = \"#6b21a8\";\n                            var _entry_content_parameters_agent_skill_id, _ref;\n                            // どのデータエージェントを呼び出したかをラベルに追加\n                            const agentId = (_ref = (_entry_content_parameters_agent_skill_id = (_entry_content1 = entry.content) === null || _entry_content1 === void 0 ? void 0 : (_entry_content_parameters = _entry_content1.parameters) === null || _entry_content_parameters === void 0 ? void 0 : _entry_content_parameters.agent_skill_id) !== null && _entry_content_parameters_agent_skill_id !== void 0 ? _entry_content_parameters_agent_skill_id : (_entry_content2 = entry.content) === null || _entry_content2 === void 0 ? void 0 : _entry_content2.agent_id) !== null && _ref !== void 0 ? _ref : \"\";\n                            if (agentId) {\n                                nodeLabel += \"\\n(\".concat(agentId, \")\");\n                            }\n                        } else {\n                            style.background = \"#2563eb\"; // その他のアクションは青色\n                        }\n                        style.color = \"white\";\n                        style.width = 150;\n                        style.minHeight = 80;\n                        // evaluate_hypothesis の場合、結果を表示する\n                        if (actionName === \"evaluate_hypothesis\") {\n                            const focusHypId = entry.currently_investigating_hypothesis_id;\n                            if (focusHypId) {\n                                // 対応する observation を探す\n                                const observationEntry = state.history.find((obsEntry, obsIndex)=>{\n                                    var _obsEntry_content;\n                                    return obsIndex > index && obsEntry.type === \"observation\" && ((_obsEntry_content = obsEntry.content) === null || _obsEntry_content === void 0 ? void 0 : _obsEntry_content.hypothesis_id) === focusHypId;\n                                });\n                                if (observationEntry && observationEntry.content) {\n                                    const status = observationEntry.content.status || \"N/A\";\n                                    const reason = observationEntry.content.evaluation_reason || \"\";\n                                    const shortReason = reason.substring(0, 50) + (reason.length > 50 ? \"...\" : \"\");\n                                    // ラベルに結果を追加\n                                    nodeLabel += \"\\n(\".concat(status, \")\");\n                                    // 理由も表示する場合は追加\n                                    // nodeLabel += `\\n${shortReason}`;\n                                    // ステータスに応じて背景色を変更\n                                    if (status === \"supported\") {\n                                        style.background = \"#10B981\"; // 緑\n                                    } else if (status === \"rejected\") {\n                                        style.background = \"#EF4444\"; // 赤\n                                    } else if (status === \"inconclusive\") {\n                                        style.background = \"#6B7280\"; // 灰色\n                                    }\n                                }\n                            }\n                        }\n                        // generate_hypothesis ノードの生成モードを記録\n                        if (actionName === \"generate_hypothesis\" && entry.content) {\n                            const mode = entry.content.mode || \"initial\";\n                            const parentId = entry.content.parent_id || null;\n                            // ノードラベルにモード情報を追加\n                            nodeLabel = \"Generate hyp\\n(\".concat(mode, \")\");\n                            // 生成情報を記録\n                            generateHypNodes.push({\n                                nodeId: nodeId,\n                                mode: mode,\n                                parentId: parentId\n                            });\n                        }\n                        // 現在のフォーカス仮説ID\n                        const focusHypId = entry.currently_investigating_hypothesis_id || null;\n                        const newNode = {\n                            id: nodeId,\n                            data: {\n                                label: nodeLabel,\n                                focusHypId: focusHypId // フォーカス仮説ID情報を保持\n                            },\n                            position: {\n                                x: 0,\n                                y: 0\n                            },\n                            style: style,\n                            type: \"action\",\n                            sourcePosition: reactflow__WEBPACK_IMPORTED_MODULE_6__.Position.Right,\n                            targetPosition: reactflow__WEBPACK_IMPORTED_MODULE_6__.Position.Left\n                        };\n                        nodes.push(newNode);\n                        nodeMap.set(nodeId, {\n                            node: newNode\n                        });\n                        // フォーカス仮説に基づく接続ロジック\n                        if (focusHypId) {\n                            // この仮説の最初のアクションノードを記録（まだない場合）\n                            if (!firstActionNodeByHypothesis[focusHypId]) {\n                                firstActionNodeByHypothesis[focusHypId] = nodeId;\n                            }\n                            // フォーカス仮説がある場合、同じ仮説の前のノードと接続\n                            if (lastActionNodeByHypothesis[focusHypId]) {\n                                edges.push({\n                                    id: \"e-flow-hyp-\".concat(focusHypId, \"-\").concat(lastActionNodeByHypothesis[focusHypId], \"-\").concat(nodeId),\n                                    source: lastActionNodeByHypothesis[focusHypId],\n                                    target: nodeId,\n                                    type: \"straight\",\n                                    style: {\n                                        stroke: \"#3b82f6\",\n                                        strokeWidth: 2\n                                    }\n                                });\n                            }\n                            // この仮説の最後のノードを更新\n                            lastActionNodeByHypothesis[focusHypId] = nodeId;\n                        } else {\n                            // フォーカス仮説がない場合、仮説なしの前のノードと接続\n                            if (lastActionNodeId) {\n                                edges.push({\n                                    id: \"e-flow-general-\".concat(lastActionNodeId, \"-\").concat(nodeId),\n                                    source: lastActionNodeId,\n                                    target: nodeId,\n                                    type: \"straight\",\n                                    style: {\n                                        stroke: \"#3b82f6\",\n                                        strokeWidth: 2\n                                    }\n                                });\n                            }\n                            // 仮説なしの最後のノードを更新\n                            lastActionNodeId = nodeId;\n                        }\n                    }\n                }\n            });\n            // 仮説ノードを生成\n            if (state.current_hypotheses && Array.isArray(state.current_hypotheses)) {\n                state.current_hypotheses.forEach((hyp)=>{\n                    if (!hyp || !hyp.id) return;\n                    const hypNodeId = \"hyp-\".concat(hyp.id);\n                    // IF-THEN形式の表示\n                    const shortText = hyp.text ? hyp.text.substring(0, 100) + (hyp.text.length > 100 ? \"...\" : \"\") : \"\";\n                    let hypLabel = \"仮説：\".concat(hyp.id, \"\\npriority：\").concat(hyp.priority);\n                    hypLabel += \"\\n\".concat(shortText);\n                    // 仮説の色分け\n                    let bgColor = \"#718096\"; // デフォルトグレー\n                    if (hyp.status === \"supported\") {\n                        bgColor = \"#38A169\"; // 緑：サポート済み\n                    } else if (hyp.status === \"rejected\") {\n                        bgColor = \"#E53E3E\"; // 赤：棄却済み\n                    } else if (hyp.id.startsWith(\"sup_\")) {\n                        bgColor = \"#718096\"; // 灰色：補助仮説\n                    }\n                    // ラベルの内容に基づき、改行と折り返しを考慮して高さを推定\n                    const CHARS_PER_LINE = 25; // 220px 幅でおおよそ 25 文字が収まる\n                    const lines = hypLabel.split(\"\\n\");\n                    let logicalLines = 0;\n                    lines.forEach((line)=>{\n                        logicalLines += Math.ceil(line.length / CHARS_PER_LINE) || 1;\n                    });\n                    const estimatedHeight = Math.max(120, logicalLines * 30); // 行高22px + パディング\n                    const hypStyle = {\n                        ...baseNodeStyle,\n                        background: bgColor,\n                        color: \"white\",\n                        width: 220,\n                        minHeight: estimatedHeight,\n                        border: hyp.id.startsWith(\"sup_\") ? \"2px solid yellow\" : \"none\"\n                    };\n                    const newNode = {\n                        id: hypNodeId,\n                        data: {\n                            label: hypLabel\n                        },\n                        position: {\n                            x: 0,\n                            y: 0\n                        },\n                        style: hypStyle,\n                        type: \"hypothesis\",\n                        sourcePosition: reactflow__WEBPACK_IMPORTED_MODULE_6__.Position.Right,\n                        targetPosition: reactflow__WEBPACK_IMPORTED_MODULE_6__.Position.Left\n                    };\n                    nodes.push(newNode);\n                    nodeMap.set(hypNodeId, {\n                        node: newNode\n                    });\n                });\n            }\n            // 各仮説の最初のアクションノードに、仮説ノードを接続\n            Object.entries(firstActionNodeByHypothesis).forEach((param)=>{\n                let [hypId, firstActionNodeId] = param;\n                const hypNodeId = \"hyp-\".concat(hypId);\n                if (nodeMap.has(hypNodeId) && nodeMap.has(firstActionNodeId)) {\n                    edges.push({\n                        id: \"e-hyp-first-\".concat(hypId, \"-\").concat(firstActionNodeId),\n                        source: hypNodeId,\n                        target: firstActionNodeId,\n                        type: \"straight\",\n                        animated: true,\n                        style: {\n                            stroke: \"#10b981\",\n                            strokeWidth: 2\n                        } // 緑色で強調\n                    });\n                }\n            });\n            // Generate Hypothesisノードと生成された仮説ノードを接続\n            if (state.current_hypotheses && Array.isArray(state.current_hypotheses)) {\n                generateHypNodes.forEach((genNode)=>{\n                    state.current_hypotheses.forEach((hyp)=>{\n                        if (!hyp || !hyp.id) return;\n                        // 生成モードと親IDに基づいて、このGenerateノードで生成された仮説かどうかを判定\n                        let isGenerated = false;\n                        if (genNode.mode === \"initial\" && !hyp.parent_hypothesis_id && !hyp.id.startsWith(\"sup_\")) {\n                            // 初期仮説の場合（親なし、非サブ仮説）\n                            isGenerated = true;\n                        } else if (genNode.mode === \"supporting\" && hyp.parent_hypothesis_id === genNode.parentId && hyp.id.startsWith(\"sub_\")) {\n                            // サポート仮説の場合（指定された親ID、かつsub_プレフィックス）\n                            isGenerated = true;\n                        }\n                        if (isGenerated) {\n                            const hypNodeId = \"hyp-\".concat(hyp.id);\n                            if (nodeMap.has(hypNodeId)) {\n                                // Generate Hypothesisノードから仮説ノードへのエッジを追加\n                                edges.push({\n                                    id: \"e-gen-\".concat(genNode.nodeId, \"-\").concat(hypNodeId),\n                                    source: genNode.nodeId,\n                                    target: hypNodeId,\n                                    type: \"straight\",\n                                    animated: true,\n                                    style: {\n                                        stroke: \"#f59e0b\",\n                                        strokeWidth: 2\n                                    } // オレンジ色で強調\n                                });\n                            }\n                        }\n                    });\n                });\n            }\n            console.log(\"[Layout] Calculating layout with dagre for\", nodes.length, \"nodes and\", edges.length, \"edges.\");\n            // 横方向（左→右）レイアウトを明示し、エッジタイプも全て 'straight' に統一\n            edges.forEach((e)=>{\n                e.type = \"straight\";\n            });\n            const { nodes: layoutedNodesResult, edges: layoutedEdgesResult } = getLayoutedElements(nodes, edges, \"LR\");\n            // --- ここから仮説ごとにノードの中心を揃える処理 ---\n            // focusHypId（仮説ID）ごとにノードをグループ化\n            const nodesByHypothesis = {};\n            layoutedNodesResult.forEach((node)=>{\n                var _node_data, _node_data1;\n                const hypId = ((_node_data = node.data) === null || _node_data === void 0 ? void 0 : _node_data.focusHypId) || ((_node_data1 = node.data) === null || _node_data1 === void 0 ? void 0 : _node_data1.parent_hypothesis_id) || null;\n                if (hypId) {\n                    if (!nodesByHypothesis[hypId]) nodesByHypothesis[hypId] = [];\n                    nodesByHypothesis[hypId].push(node);\n                }\n            });\n            // ↓ 中心で揃えるロジック + 仮説ノード中心に合わせてシフト\n            Object.entries(nodesByHypothesis).forEach((param)=>{\n                let [hypId, group] = param;\n                if (group.length > 0) {\n                    // 対応する仮説ノードの中心Yを取得\n                    const hypNodeId = \"hyp-\".concat(hypId);\n                    const hypNodeEntry = nodeMap.get(hypNodeId);\n                    if (hypNodeEntry) {\n                        var _hypNode_style;\n                        const hypNode = hypNodeEntry.node;\n                        var _hypNode_style_minHeight;\n                        const hypHeight = Number((_hypNode_style_minHeight = (_hypNode_style = hypNode.style) === null || _hypNode_style === void 0 ? void 0 : _hypNode_style.minHeight) !== null && _hypNode_style_minHeight !== void 0 ? _hypNode_style_minHeight : 80);\n                        const hypCenterY = hypNode.position.y + hypHeight / 2;\n                        // グループの各ノードの中心Yを仮説中心に合わせる\n                        group.forEach((node)=>{\n                            var _node_style;\n                            var _node_style_minHeight;\n                            const nodeHeight = Number((_node_style_minHeight = (_node_style = node.style) === null || _node_style === void 0 ? void 0 : _node_style.minHeight) !== null && _node_style_minHeight !== void 0 ? _node_style_minHeight : 80);\n                            node.position.y = hypCenterY - nodeHeight / 2;\n                        });\n                    }\n                }\n            });\n            // --- ここまで ---\n            setLayoutedNodes(layoutedNodesResult);\n            setLayoutedEdges(layoutedEdgesResult);\n        } catch (error) {\n            console.error(\"[Flow Generation/Layout] Error:\", error);\n            setLayoutedNodes([]);\n            setLayoutedEdges([]);\n        }\n    }, [\n        state\n    ]);\n    if (!state) {\n        console.log(\"[DashboardPage] State is null/undefined, rendering spinner.\");\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_7__.Center, {\n            h: \"100vh\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_8__.Spinner, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n                lineNumber: 393,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n            lineNumber: 392,\n            columnNumber: 7\n        }, this);\n    }\n    var _state_available_data_agents_and_skills;\n    const agentsToShow = (_state_available_data_agents_and_skills = state === null || state === void 0 ? void 0 : state.available_data_agents_and_skills) !== null && _state_available_data_agents_and_skills !== void 0 ? _state_available_data_agents_and_skills : [];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_9__.Grid, {\n        templateColumns: \"2fr 1fr\",\n        gap: 4,\n        p: 4,\n        h: \"100vh\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.GridItem, {\n                border: \"1px solid #E2E8F0\",\n                borderRadius: \"md\",\n                p: 2,\n                overflow: \"hidden\",\n                minHeight: \"200px\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.Heading, {\n                        size: \"sm\",\n                        mb: 2,\n                        children: \"Execution Flow & Hypotheses\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n                        lineNumber: 403,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ExecutionGraph__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        nodes: layoutedNodes,\n                        edges: layoutedEdges\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n                        lineNumber: 406,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n                lineNumber: 402,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_10__.GridItem, {\n                border: \"1px solid #E2E8F0\",\n                borderRadius: \"md\",\n                p: 2,\n                overflowY: \"auto\",\n                minHeight: \"200px\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_11__.Heading, {\n                        size: \"sm\",\n                        mb: 2,\n                        children: \"Connected Agents\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n                        lineNumber: 409,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AgentTable__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        agents: agentsToShow\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n                        lineNumber: 412,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n                lineNumber: 408,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\nyham\\\\work\\\\A2A\\\\A2A\\\\A2A_risk\\\\samples\\\\python\\\\agents\\\\risk_agent\\\\frontend\\\\app\\\\page.tsx\",\n        lineNumber: 401,\n        columnNumber: 5\n    }, this);\n}\n_s(DashboardPage, \"mJo54rabmpf3FYJuuSFISKwkRKI=\", false, function() {\n    return [\n        _lib_useAgentState__WEBPACK_IMPORTED_MODULE_4__.useAgentState\n    ];\n});\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ })

});